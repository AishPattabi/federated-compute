// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.internal.federatedcompute.v1;

import "google/protobuf/duration.proto";

option java_package = "com.google.internal.federatedcompute.v1";
option java_multiple_files = true;
option java_outer_classname = "FederatedComputeApi";

// Information that tells the client where to send the request for the next
// protocol phase (the immediately following phase only, not any additional
// subsequent phases). For example, this may point to the frontend to which
// a StartTaskAssignmentRequest should be sent, but it should not then be used
// for uploading aggregation results. A ForwardingInfo will always be returned
// to the client unless the client was not selected to continue with the
// protocol.
message ForwardingInfo {
  // A URI prefix for the next service to send the request for the next protocol
  // phase to.
  //
  // The URI prefix must always start with "https://".
  //
  // The URI prefix may end with a trailing '/', but is not required to. During
  // the construction of the next protocol request, a slash will always be
  // inserted by the client between this prefix and the request's URI suffix.
  //
  // For example, if some protocol response's ForwardingInfo contains the prefix
  // "https://foo.bar.com" or "https://foo.bar.com/", and if the subsequent
  // protocol request's URI suffix is "/baz", then the subsequent request's full
  // URI would be "https://foo.bar.com/baz".
  string target_uri_prefix = 1;
  // Request headers that should be included with the next request for the next
  // protocol phase. Note that these headers should only be applied to protocol
  // requests (incl. requests to the long running `Operations` service), but not
  // to any `Resource` fetch requests.
  map<string, string> extra_request_headers = 2;
}

// The attestation measurement providing evidence of integrity for a client.
// TODO(team): Determine source of attestation.
message AttestationMeasurement {}

message ClientVersion {
  // Version code identifying the client release.
  string version_code = 1;
}

message Resource {
  // A resource can either be downloaded via a URI, or has its data inlined in
  // in this message itself.
  oneof resource {
    // The URI the resource can be downloaded from. Note that
    // `ForwardingInfo.target_uri_prefix` field generally don't apply to these
    // URIs.
    string uri = 1;

    // The inlined data for the resource.
    bytes data = 2
        ;
  }
}

// Currently empty message which is sent when client (device) is rejected for
// participation and is not assigned a task.
message RejectionInfo {}

// A suggestion to the client when to retry the connection to the service next
// time
message RetryWindow {
  // The suggested minimal duration after which the client should
  // retry. If the client retries earlier, it is likely it will be rejected
  // again.
  google.protobuf.Duration delay_min = 1;

  // Required. The suggested maximal duration after which the client should
  // retry, provided scheduling conditions allow. The client is supposed to make
  // a best effort to callback in the min..max window, and should avoid
  // calling before min. If the client calls after max, the likelihood to be
  // rejected again is higher.
  google.protobuf.Duration delay_max = 2;
}
